name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  Linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3
      - name: Add problem matcher
        run: echo "::add-matcher::.github/problemMatchers/eslint.json"
      - name: Use Node.js v18
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          node-version: 18
          cache: yarn
          registry-url: https://registry.yarnpkg.com/
      - name: Install Dependencies
        run: yarn --immutable
      - name: Run ESLint
        run: yarn lint --fix=false

  Testing:
    name: Testing with node v${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [14, 16, 18]
    steps:
      - name: Checkout Project
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3
      - name: Use Node.js v${{ matrix.node }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
          registry-url: https://registry.yarnpkg.com/
      - name: Install Dependencies
        run: yarn --immutable
      - name: Test Code
        run: yarn test
      - name: Store code coverage report
        if: ${{ matrix.node == '18' }}
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3
        with:
          name: coverage
          path: coverage/

  Building:
    name: Compile source code Node v${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [14, 16, 18]
    steps:
      - name: Checkout Project
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3
      - name: Add problem matcher
        run: echo "::add-matcher::.github/problemMatchers/tsc.json"
      - name: Use Node.js v${{ matrix.node }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
          registry-url: https://registry.yarnpkg.com/
      - name: Install Dependencies
        run: yarn --immutable
      - name: Build Code
        run: yarn build

  Upload_Coverage_Report:
    name: Upload coverage report to codecov
    needs: [Testing]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3
        with:
          fetch-depth: 2
      - name: Download Coverage report
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3
        with:
          name: coverage
          path: coverage/
      - name: Codecov Upload
        uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70 # tag=v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage/
          fail_ci_if_error: true

  CodeQL:
    name: Codequality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@cc7986c02bac29104a72998e67239bb5ee2ee110 # tag=v2
        with:
          languages: typescript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@cc7986c02bac29104a72998e67239bb5ee2ee110 # tag=v2
